defmodule SurfaceMultiRenderReproducerWeb.Components.Hero do
  @moduledoc """
  A sample component generated by `mix surface.init`.
  """
  use Surface.LiveComponent

  @doc "The name"
  prop name, :string, default: "Guest"

  @doc "The subtitle"
  prop subtitle, :string

  @doc "The color"
  prop color, :string, values!: ["danger", "info", "warning"]

  data time, :integer, default: 0

  def render(assigns) do
    ~F"""
    <section class={"phx-hero", "alert-#{@color}": @color}>
      <h1>Hi, {@name}</h1>
      <p>{@subtitle}</p>
      <p>Time is {@time}</p>
      <p><button :on-click="click">Click me in render/1.</button></p>
      <.render_click target={@myself} />
    </section>
    """
  end

  defp render_click(assigns) do
    ~F"""
    <p><button :on-click={"click", target: @target}>Click me in render_click/1.</button></p>
    """
  end

  def handle_event("click", _, socket) do
    {:noreply, assign(socket, time: System.os_time())}
  end
end
